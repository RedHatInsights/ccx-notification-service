// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// OCMClient is an autogenerated mock type for the OCMClient type
type OCMClient struct {
	mock.Mock
}

// GetTokens provides a mock function with given fields: delay
func (_m *OCMClient) GetTokens(delay time.Duration) (string, string, error) {
	ret := _m.Called(delay)

	var r0 string
	if rf, ok := ret.Get(0).(func(time.Duration) string); ok {
		r0 = rf(delay)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 string
	if rf, ok := ret.Get(1).(func(time.Duration) string); ok {
		r1 = rf(delay)
	} else {
		r1 = ret.Get(1).(string)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(time.Duration) error); ok {
		r2 = rf(delay)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

type mockConstructorTestingTNewOCMClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewOCMClient creates a new instance of OCMClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOCMClient(t mockConstructorTestingTNewOCMClient) *OCMClient {
	mock := &OCMClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
